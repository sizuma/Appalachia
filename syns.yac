%{
#include "defs.h"
#define YYSTYPE Cell *
%}
%token	ID NUMBER STRING EQUAL LPAR RPAR LBRA RBRA
%%

Program
	: Statements	{ $$ = $1; }
Statements
	: Statement		{ $$ = $1;  tree($$); }
	| Statements Statement 	{ $$ = $2; tree($$); }
Statement
	: Assign	{ $$ = $1; }
	| Expression	{ $$ = $1; }

Assign
	: Variable EQUAL Expression { $$ = node("=", cons($1, $3)); }

Expression
	: Variable	{ $$ = $1; }
	| Constant	{ $$ = $1; }

BlockBody
	: Statement	{ $$ = $1; }
	| BlockBody Statement	{ $$ = $2; }
Block
	: LBRA BlockBody RBRA { $$ = $2; }
Variable
	: ID				{ $$ = leaf("ID", yytext); }
Constant
	: NUMBER			{ $$ = leaf("NUMBER", yytext); }
	| STRING			{ $$ = leaf("STRING", yytext); }
%%

#include "lex.yy.c"
void yyerror(char *s) {
	fprintf(stderr, "\n%s at %d: nearby \"%s\"\n\n", s, linecounter, yytext);
	exit(EXIT_FAILURE);
}
