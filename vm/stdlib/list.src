List = {
	Cons = \car, cdr -> {
		this
	}

	new = \ headCons -> {
		self = this
		append = \ e -> {
			List.append(self, e)
		}
		foreach = \ f -> {
			List.foreach(self, f)
		}
		this
	}

    empty = \ -> {
        List.new(null)
    }

	append = \ list, e -> {
		self = this
	    head = null
	    tail = head

	    list.foreach(\each -> {
	        cons = List.Cons(each,null)
	        if(==(head, null), \ -> {
	            self.head = cons
	        }, \ -> {
	            self.tail.cdr = cons
	        })
	        self.tail = cons
	    })
	    cons = List.Cons(e, null)
	    if(==(tail, null), \ -> {
	    	List.new(cons)
	    }, \ -> {
			self.tail.cdr = cons
	    	List.new(head)
	    })
	}

	foreach = \ list, lambda -> {
		f = \ current -> {
			lambda(current.car)
			cdr = current.cdr
			if(!=(cdr, null), \ -> {
				f(cdr)
			})
		}
		head = list.headCons
		if(!=(head, null), \ -> {
		    f(head)
		})
	}
	this
}